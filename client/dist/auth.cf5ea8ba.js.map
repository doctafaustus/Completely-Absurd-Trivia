{"version":3,"sources":["utils/utils.js","scripts/auth.js"],"names":["utils","getCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","setCookie","value","minutes","expirationFragment","date","Date","ms","expiration","getTime","setTime","toGMTString","deleteCookie","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","googleProvider","auth","GoogleAuthProvider","querySelector","addEventListener","logIn","logOut","onAuthStateChanged","user","console","log","email","signInWithPopup","then","result","addIfNew","catch","error","code","message","credential","fetch","method","headers","body","JSON","stringify","authUser","response","json","data","signOut"],"mappings":";;ACAA;;;;AAEA,ADFA,IAAMA,KAAK,GAAG;ACGd,ADDEC,EAAAA,ECCIyB,ODHQ,OCGM,GAAG,WDDXxB,IAFE,EAEI;ACEhByB,ADDE,ECCFA,MAAM,ADDExB,ECCA,IDDM,aAAMD,IAAN,MAAZ,cCAmB;AAErB0B,ADDE,ECCFA,MDDQxB,EAAE,ECCA,CDDGC,CCCD,ODDS,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAX,uBCDmB;AAGrBsB,EAAAA,WAAW,EAAE,uDAHQ;AAIrBC,ADDE,ECCFA,ODDO,ECCE,EAAE,ADDAtB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAAE,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC,KCHjB;AAKrBuB,ADDI,ECCJA,QDDQrB,CAAC,GAAGN,CCCC,CDDC,CCCC,ADDAI,CAAD,CAAV,0CCJiB;AAMrBwB,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,ADDI,ECCJA,KAAK,EAAE,IDDIvB,CAAC,CAACC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4B,kBCNX;AAQrBuB,ADDMxB,ECCNwB,MDDMxB,CAAC,GAAGA,CAAC,CAACE,CCCC,EAAE,MDDL,CAAY,CAAZ,EAAeF,CAAC,CAACD,MAAjB,CAAJ;ACPe,ADQhB,CCRP;AAWA0B,QAAQ,CAACC,aAAT,CAAuBV,cAAvB;AACA,ADFM,ICEAW,MDFI3B,CAAC,CAACG,MCEQ,CDFV,CAAUV,CCEG,IAAIgC,CDFjB,MAAsB,CCEG,ADF7B,CCE8BG,CDFD,GCER,CAAcC,kBAAlB,EAAvB,EAEA;ADHQ,eAAO7B,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,EAA2BC,CAAC,CAACD,MAA7B,CAAP;ACIRJ,ADHO,QCGC,CAACmC,aAAT,CAAuB,SAAvB,EAAkCC,gBAAlC,CAAmD,OAAnD,EAA4DC,KAA5D,GAEA;ADJK;ACKLrC,QAAQ,CAACmC,aAAT,CAAuB,UAAvB,EAAmCC,gBAAnC,CAAoD,OAApD,EAA6DE,MAA7D,GAEA;ADLI,WAAO,IAAP;ACMJR,ADLG,GAnBW,KCwBN,CAACG,IAAT,GAAgBM,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACzC,ADJA/B,EAAAA,ICII+B,IAAJ,CDzBY,CCyBF,oBDJA3C,IArBE,EAqBIa,KArBJ,EAqBWC,OArBX,EAqBoB;ACK9B8B,ADJA,ICIAA,IDJI7B,GCIG,CAAC8B,GAAR,CAAY,UDJU,CCItB,EAAyBF,ADJA,EAAzB,ECIA;;AACA7C,ADHA,QAAIgB,OAAJ,EAAa,ECGPF,SAAN,CAAgB,UAAhB,EAA4B+B,IAAI,CAACG,KAAjC;AACD,ADHG,GCAJ,MAGO,CDHG9B,IAAI,GAAG,IAAIC,IAAJ,EAAb;ACIF2B,ADHE,ICGFA,MDHQ1B,CCGD,CAAC2B,ADHE,GCGV,ADHa/B,CCGD,MDHQ,GAAG,EAAV,GAAe,CCG5B,GDHE;AACA,UAAMK,UAAU,GAAGH,IAAI,CAACI,OAAL,KAAiBF,EAApC;ACGFpB,ADDEkB,MAAAA,IAAI,CAACK,OAAL,CCCIE,ADDSJ,UAAb,ECCF,CAAmB,UAAnB;AACD,ADDGJ,MAAAA,kBAAkB,uBAAgBC,IAAI,CAACM,WAAL,EAAhB,CAAlB;ACEL,ADDI,CCPL;;AAWA,ADFInB,IAAAA,KCEKqC,GDFG,CAACpC,CCEb,GAAiB,EDFb,aAAqBJ,IAArB,cAA6Ba,KAA7B,SAAqCE,kBAArC;ACGFkB,ADFC,ECEDA,CDpCY,OCoCJ,CAACG,IAAT,GAAgBW,eAAhB,CAAgCZ,cAAhC,EAAgDa,IAAhD,CAAqD,UAAAC,MAAM,EAAI;AAC7D,ADDF1B,EAAAA,MCCQoB,IAAI,EDrCA,CCqCGM,MAAM,CAACN,IAApB,YDDW3C,IApCD,EAoCO;ACEjB4C,ADDAzC,ICCAyC,ADDAzC,OCCO,CAAC0C,ADDA,CAACzC,ECCT,CAAY,GDDZ,GCCA,EAAoBuC,IAApB,IDDqB3C,IAArB;ACEAkD,ADDD,ICCCA,QAAQ,CAACP,IAAD,CAAR;AACD,ADxCW,CAAd,ECoCE,EAIGQ,KAJH,CAIS,UAAAC,KAAK,EAAI;AAAA,QACRC,IADQ,GAC6BD,ADClCtD,KCFK,CACRuD,IADQ;AAAA,QACFC,OADE,GAC6BF,KAD7B,CACFE,OADE;AAAA,QACOR,KADP,GAC6BM,KAD7B,CACON,KADP;AAAA,QACcS,UADd,GAC6BH,KAD7B,CACcG,UADd;AAEhBX,IAAAA,OAAO,CAACC,GAAR,6BAAiCQ,IAAjC,gBAA2CC,OAA3C,gBAAwDR,KAAxD,gBAAmES,UAAnE;AACD,GAPD;AAQD;;AAED,SAASL,QAAT,CAAkBP,IAAlB,EAAwB;AACtBa,EAAAA,KAAK,CAAC,kBAAD,EAAqB;AACxBC,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFe;AAGxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,QAAQ,EAAEnB;AAAZ,KAAf;AAHkB,GAArB,CAAL,CAKCK,IALD,CAKM,UAAAe,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GALd,EAMChB,IAND,CAMM,UAAAiB,IAAI,EAAI;AACZrB,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CoB,IAA7C;AACD,GARD;AASD;;AAED,SAASxB,MAAT,GAAkB;AAChBR,EAAAA,QAAQ,CAACG,IAAT,GAAgB8B,OAAhB,GAA0BlB,IAA1B,CACE,YAAM;AACJJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAHH,EAIE,UAAAO,KAAK;AAAA,WAAIR,OAAO,CAACQ,KAAR,CAAc,gBAAd,EAAgCA,KAAhC,CAAJ;AAAA,GAJP;AAMD","file":"auth.cf5ea8ba.js","sourceRoot":"..","sourcesContent":["const utils = {\n\n  getCookie(name) {\n    const nameEQ = `${name}=`;\n    const ca = document.cookie.split(';');\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1, c.length);\n      }\n\n      if (c.indexOf(nameEQ) === 0) {\n        return c.substring(nameEQ.length, c.length);\n      }\n    }\n\n    return null;\n  },\n\n  setCookie(name, value, minutes) {\n    let expirationFragment = '';\n\n    if (minutes) {\n      const date = new Date();\n      const ms = minutes * 60 * 1000;\n      const expiration = date.getTime() + ms;\n\n      date.setTime(expiration);\n      expirationFragment = `; expires=${date.toGMTString()}`;\n    }\n\n    document.cookie = `${name}=${value}${expirationFragment}; path=/`;\n  },\n\n  deleteCookie(name) {\n    document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/`;\n  }\n\n};\n\nexport default utils;","import utils from '../utils/utils.js';\n\n// Initialize firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCPNbwrNgjrpf491e3WJwWQwnNqPJ0R7XE\",\n  authDomain: \"completely-absurd-trivia-b939b.firebaseapp.com\",\n  databaseURL: \"https://completely-absurd-trivia-b939b.firebaseio.com\",\n  projectId: \"completely-absurd-trivia-b939b\",\n  storageBucket: \"completely-absurd-trivia-b939b.appspot.com\",\n  messagingSenderId: \"882068649922\",\n  appId: \"1:882068649922:web:540a53211b1d913bf8885b\",\n  measurementId: \"G-DV7RDPVL0Q\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\n// Log In\ndocument.querySelector('#log-in').addEventListener('click', logIn);\n\n// Log Out\ndocument.querySelector('#log-out').addEventListener('click', logOut);\n\n// Control loggedIn cookie when user signs in/out\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    console.log('logged in', user);\n    utils.setCookie('loggedIn', user.email);\n  } else {\n    console.log('not logged in');\n    utils.deleteCookie('loggedIn');\n  }\n});\n\n\nfunction logIn() {\n  firebase.auth().signInWithPopup(googleProvider).then(result => {\n    const user = result.user;\n    console.log('user', user);\n    addIfNew(user);\n  }).catch(error => {\n    const { code, message, email, credential } = error;\n    console.log(`Error signing in: ${code} - ${message} - ${email} - ${credential}`);\n  });\n}\n\nfunction addIfNew(user) {\n  fetch('/api/create-user', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ authUser: user })\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('/api/create-user response: \\n', data);\n  });\n}\n\nfunction logOut() {\n  firebase.auth().signOut().then(\n    () => {\n      console.log('Signed Out');\n    },\n    error => console.error('Sign Out Error', error)\n  );\n}\n"]}